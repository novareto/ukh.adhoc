iDo a functional doctest test on the app.
========================================

:doctest:
:layer: ukh.adhoc.tests.test_functional.layer

Let's first create an instance of Uvcsite at the top level:

   >>> from ukh.adhoc.app import UKHAdHocApp
   >>> from zope.site.hooks import setSite
   >>> root = getRootFolder()
   >>> adhoc_app = UKHAdHocApp()
   >>> root['app'] = adhoc_app
   >>> setSite(root['app'])

   >>> import json
   >>> from zope.testbrowser.wsgi import Browser
   >>> browser = Browser()
   >>> browser.handleErrors = True
   >>> browser.addHeader('Authorization', 'Basic magnus:pwd')

Request with a few errors
-------------------------

   >>> data = {
   ...     'az': 1,
   ...     'password': 'password',
   ...     'email': 'ck@novareto.de',
   ...     'oid': '11'
   ...     }

   >>> browser.open(
   ...     'http://localhost/app/add', data=json.dumps(data))
   Traceback (most recent call last):
   ...
   HTTPError: HTTP Error 400: Bad Request

   >>> assert json.loads(browser.contents) == {
   ...    'errors': [
   ...        'az: Object is of wrong type.',
   ...    ]
   ... }
   


Working request
---------------

   >>> data = {
   ...     'az': 'Audrey',
   ...     'password': 'password',
   ...     'email': 'audrey@pithiviers.fr',
   ...     'oid': '13'
   ...     }

   >>> browser.open(
   ...     'http://localhost/app/add', data=json.dumps(data))

   >>> assert browser._response.status == '201 Created'


No duplicate
---------------

   >>> data = {
   ...     'az': 'Audrey',
   ...     'password': 'password2',
   ...     'email': 'otheraudrey@pithiviers.fr',
   ...     'oid': '31'
   ...     }

   >>> browser.open(
   ...     'http://localhost/app/add', data=json.dumps(data))
   Traceback (most recent call last):
   ...
   HTTPError: HTTP Error 400: Bad Request

   >>> assert json.loads(browser.contents) == {
   ...    'errors': [
   ...        'Account `Audrey` already exists.',
   ...    ]
   ... }


Representation
--------------

   >>> data = {'az': 'Audrey'}
   >>> browser.open(
   ...     'http://localhost/app/get', data=json.dumps(data))

   >>> assert json.loads(browser.contents) == {
   ...     "document_information": None,
   ...     "password": "password",
   ...     "az": "Audrey",
   ...     "email": "audrey@pithiviers.fr",
   ...     "oid": "13"
   ... }


Update
---------------

   >>> data = {
   ...     'az': 'Audrey',
   ...     'email': 'audrey@paris.fr',
   ...     }

   >>> browser.open(
   ...     'http://localhost/app/update', data=json.dumps(data))

   >>> assert browser._response.status == '202 Accepted'
